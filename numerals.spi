(Load "nat.spi")

(Definition numeral (forall (A :: Type) -> (-> (-> A A) A A)) :: Type₁)

(Definition zero  (lambda (A f x) x) :: numeral)
(Definition one   (lambda (A f x) (f x)) :: numeral)
(Definition two   (lambda (A f x) (f (f x))) :: numeral)
(Definition three (lambda (A f x) (f (f (f x)))) :: numeral)

(Definition plus  (lambda (m n A f x) (m A f (n A f x)))
               :: (-> numeral numeral numeral))

(Check plus)
(Eval (plus three two Nat Succ Zero))
