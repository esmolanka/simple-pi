
(Definition numeral
  (forall (A :: 0) -> (-> (-> A A) A A)))

(Definition zero
  (lambda (A :: 0) (f :: (-> A A)) (x :: A) .
    x))

(Definition one
  (lambda (A :: 0) (f :: (-> A A)) (x :: A) .
    (f x)))

(Definition two
  (lambda (A :: 0) (f :: (-> A A)) (x :: A) .
    (f (f x))))

(Definition three
  (lambda (A :: 0) (f :: (-> A A)) (x :: A) .
    (f (f (f x)))))

(Parameter Nat 0)
(Parameter z Nat)
(Parameter s (-> Nat Nat))

(Check (three Nat s z))

(Definition plus
  (lambda (m :: numeral) (n :: numeral) (A :: 0) (f :: (-> A A)) (x :: A) .
    (m A f (n A f x))))

(Check (plus three two Nat s z))
